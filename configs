3 OBS:

    obs_noise_params = {
        'position': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[0.0, 0.0],[0.0,0.0]]),
            'stds': np.array([[0.3, 0.3],[0.3,0.3]])
        },
        'velocity': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.01, 0.01],[-0.01,0.01]]),
            'stds': np.array([[0.001, 0.001],[0.001,0.001]])
        }
    }


    obs_noise_params1 = {
        'position': {
            'weights': np.array([0.2, 0.8]),
            'means': np.array([[0.004, -0.001],[-0.4,0.1]]),
            'stds': np.array([[0.1, 0.1],[0.2,0.15]])
        },
        'velocity': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.01, 0.01],[-0.01,0.01]]),
            'stds': np.array([[0.001, 0.001],[0.001,0.001]])
        }
    }
    
    obs_noise_params2 = {
        'position': {
            'weights': np.array([0.2, 0.8]),
            'means': np.array([[-0.4, 0.1],[-0.4,0.1]]),
            'stds': np.array([[0.15, 0.07],[0.15,0.07]])
        },
        'velocity': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.01, 0.01],[-0.01,0.01]]),
            'stds': np.array([[0.001, 0.001],[0.001,0.001]])
        }
    }

    obs_noise_params3 = {
        'position': {
            'weights': np.array([0.2, 0.8]),
            'means': np.array([[-0.4, 0.1],[-0.1,0.025]]),
            'stds': np.array([[0.15, 0.15],[0.1,0.1]])
        },
        'velocity': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.01, 0.01],[-0.01,0.01]]),
            'stds': np.array([[0.001, 0.001],[0.001,0.001]])
        }
    }
    bot=NonHolonomicBot(np.array([0,0]), np.array([20, 0]), agent_noise_params, sensor_range=sensor_range)
    obstacles.append(Obstacle(position=np.array([13,-10]), goal=np.array([13,10]), noise_params=obs_noise_params2))
    obstacles.append(Obstacle(position=np.array([13,10]), goal=np.array([13,-10]), noise_params=obs_noise_params1))
    obstacles.append(Obstacle(position=np.array([19,0]), goal=np.array([0,0]), noise_params=obs_noise_params3))
        ax.set_xlim((-5, 25))
        # ax.set_xlim((0, 12))
        ax.set_ylim((-15,15))
2 OBS:
    obs_noise_params = {
        'position': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.4, 0.1],[-0.2,0.05]]),
            'stds': np.array([[0.15, 0.03],[0.2,0.03]])
            'means': np.array([[0.0, 0.0],[0.0,0.0]]),
            'stds': np.array([[0.3, 0.3],[0.3,0.3]])
        },
        'velocity': {
            'weights': np.array([0.3, 0.7]),
            'means': np.array([[-0.0, 0.0],[-0.0,0.0]]),
            'stds': np.array([[0.0, 0.0],[0.0,0.0]])
        }
    }
    bot=NonHolonomicBot(np.array([0,0]), np.array([0, 20]), agent_noise_params, sensor_range=sensor_range)

    obstacles.append(Obstacle(position=np.array([-2.5,15]), goal=np.array([0,0]), noise_params=obs_noise_params))
    obstacles.append(Obstacle(position=np.array([2.5,15]), goal=np.array([0,0]), noise_params=obs_noise_params))
        ax.set_ylim((-5,20))
        ax.set_xlim((-12.5, 12.5))


2 OBS V:
    obs_noise_params = {
        'position': {
            'weights': np.array([0.2, 0.8]),
            'means': np.array([[0.4, -0.1],[-0.4,0.1]]),
            'stds': np.array([[0.15, 0.15],[0.2,0.2]])
        },
        'velocity': {
            'weights': np.array([0.3, 0.7]),
            'means': np.array([[-0.0, 0.0],[-0.0,0.0]]),
            'stds': np.array([[0.0, 0.0],[0.0,0.0]])
        }
    }    
    
    obs_noise_params2 = {
        'position': {
            'weights': np.array([0.2, 0.8]),
            'means': np.array([[-0.4, 0.1],[0.4,-0.1]]),
            'stds': np.array([[0.15, 0.15],[0.2,0.2]])
        },
        'velocity': {
            'weights': np.array([0.3, 0.7]),
            'means': np.array([[-0.0, 0.0],[-0.0,0.0]]),
            'stds': np.array([[0.0, 0.0],[0.0,0.0]])
        }
    }
        bot=NonHolonomicBot(np.array([0,0]), np.array([20,20]), agent_noise_params, sensor_range=sensor_range)

    obstacles.append(Obstacle(position=np.array([11.5,7]), goal=np.array([0,0]), noise_params=obs_noise_params))
    obstacles.append(Obstacle(position=np.array([7,11.5]), goal=np.array([0,0]), noise_params=obs_noise_params2))

        ax.set_xlim((-5, 20))
        ax.set_ylim((-5,20))


1 and 3 OBS:
    obs_noise_params = {
        'position': {
            'weights': np.array([0.4, 0.6]),
            'means': np.array([[0.3, -0.2],[-0.3,0.2]]),
            'stds': np.array([[0.2, 0.05],[0.2,0.05]])
        },
        'velocity': {
            'weights': np.array([0.3, 0.7]),
            'means': np.array([[0.0, 0.0],[0.0,0.0]]),
            'stds': np.array([[0.01, 0.01],[0.01,0.01]])
        }
    }

    bot=NonHolonomicBot(np.array([0,0]), np.array([20,20]), agent_noise_params, sensor_range=sensor_range)
    #obstacles.append(Obstacle(position=np.array([10,7]), goal=np.array([0,0]), noise_params=obs_noise_params))
    #obstacles.append(Obstacle(position=np.array([7,10]), goal=np.array([0,0]), noise_params=obs_noise_params))
    obstacles.append(Obstacle(position=np.array([7,7]), goal=np.array([0,0]), noise_params=obs_noise_params))

        ax.set_xlim((-5, 20))
        ax.set_ylim((-5,20))


8 OBS

    obs_noise_params1 = {
        'position': {
            'weights': np.array([0.4, 0.6]),
            'means': radius*np.array([[0.3, -0.2],[-0.3,0.2]]),
            'stds': radius*np.array([[0.2, 0.05],[0.2,0.05]])
        },
        'velocity': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.01, 0.01],[-0.01,0.01]]),
            'stds': np.array([[0.001, 0.001],[0.001,0.001]])
        }
    }
    
    obs_noise_params2 = {
        'position': {
            'weights': np.array([0.2, 0.8]),
            'means': radius*np.array([[-0.3, 0.2],[-0.3,0.2]]),
            'stds': radius*np.array([[0.2, 0.05],[0.2,0.5]])
        },
        'velocity': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.01, 0.01],[-0.01,0.01]]),
            'stds': np.array([[0.001, 0.001],[0.001,0.001]])
        }
    }

    obs_noise_params3 = {
        'position': {
            'weights': np.array([0.2, 0.8]),
            'means': radius*np.array([[-0.4, 0.1],[-0.1,0.025]]),
            'stds': radius*np.array([[0.15, 0.15],[0.1,0.1]])
        },
        'velocity': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.01, 0.01],[-0.01,0.01]]),
            'stds': np.array([[0.001, 0.001],[0.001,0.001]])
        }
    }

    obs_noise_params4 = {
        'position': {
            'weights': np.array([0.4, 0.6]),
            'means': radius*np.array([[-0.3, 0.2],[-0.3,0.2]]),
            'stds': radius*np.array([[0.2, 0.05],[0.2,0.05]])
        },
        'velocity': {
            'weights': np.array([0.3, 0.7]),
            'means': np.array([[0.0, 0.0],[0.0,0.0]]),
            'stds': np.array([[0.01, 0.01],[0.01,0.01]])
        }
    }

    obs_noise_params5 = {
        'position': {
            'weights': np.array([0.4, 0.6]),
            'means': radius*np.array([[0.3, -0.2],[0.3,-0.2]]),
            'stds': radius*np.array([[0.2, 0.05],[0.2,0.05]])
        },
        'velocity': {
            'weights': np.array([0.3, 0.7]),
            'means': np.array([[0.0, 0.0],[0.0,0.0]]),
            'stds': np.array([[0.01, 0.01],[0.01,0.01]])
        }
    }

    bot=NonHolonomicBot(np.array([-15,7]), np.array([7, -7]), agent_noise_params, sensor_range=sensor_range, radius=radius)
    obstacles.append(Obstacle(position=np.array([-4, 4]), goal=np.array([13,10]), noise_params=obs_noise_params1, velocity=np.array([-0.75, 0.3]),radius=radius))
    obstacles.append(Obstacle(position=np.array([-2, 2]), goal=np.array([13,-10]), noise_params=obs_noise_params1, velocity=np.array([-0.75, 0.3]),radius=radius))
    obstacles.append(Obstacle(position=np.array([0, 0]), goal=np.array([0,0]), noise_params=obs_noise_params4, velocity=np.array([-0.75, 0.3]),radius=radius))
    obstacles.append(Obstacle(position=np.array([2, -2]), goal=np.array([13,10]), noise_params=obs_noise_params2, velocity=np.array([-0.75, 0.3]),radius=radius))
    obstacles.append(Obstacle(position=np.array([-4.25, -4.25]), goal=np.array([13,-10]), noise_params=obs_noise_params4, velocity=np.array([-0.75, 0.3]),radius=radius))
    obstacles.append(Obstacle(position=np.array([-2, -2]), goal=np.array([0,0]), noise_params=obs_noise_params5, velocity=np.array([-0.75, 0.3]),radius=radius))
    obstacles.append(Obstacle(position=np.array([6, -6]), goal=np.array([0,0]), noise_params=obs_noise_params3, velocity=np.array([-0.75, 0.3]),radius=radius))
    obstacles.append(Obstacle(position=np.array([8, -8]), goal=np.array([0,0]), noise_params=obs_noise_params3, velocity=np.array([-0.75, 0.3]),radius=radius))


5 Obs

    agent_noise_params = {
        'position': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.0, 0.0],[0.0,-0.0]]),
            'stds': np.array([[0.01, 0.01],[0.01,0.01]])
        },
        'velocity': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.0, 0.0],[0.0,-0.0]]),
            'stds': np.array([[0.01, 0.01],[0.01,0.01]])
        },
        'controls': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.0, 0.0],[0.0,-0.0]]),
            'stds': np.array([[0.01, 0.01],[0.01,0.01]])
        },
        'head': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([0.0, 0.0]),
            'stds': np.array([0.001, 0.001])
        }        
    }

    obs_noise_params1 = {
        'position': {
            'weights': np.array([0.4, 0.6]),
            'means': np.array([[0.3, -0.2],[0.03,-0.04]]),
            'stds': np.array([[0.25, 0.05],[0.02,0.02]])
        },
        'velocity': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.0, 0.0],[-0.0,0.0]]),
            'stds': np.array([[0.01, 0.01],[0.01,0.01]])
        }
    } 
    
    obs_noise_params2 = {
        'position': {
            'weights': np.array([0.4, 0.6]),
            'means': np.array([[-0.3, 0.2],[0.03,-0.04]]),
            'stds': np.array([[0.25, 0.05],[0.02,0.02]])
        },
        'velocity': {
            'weights': np.array([0.5, 0.5]),
            'means': np.array([[-0.0, 0.0],[-0.0,0.0]]),
            'stds': np.array([[0.01, 0.01],[0.01,0.01]])
        }
    }
    bot=NonHolonomicBot(np.array([0,0]), np.array([0, 25]), agent_noise_params, sensor_range=sensor_range)
    obstacles.append(Obstacle(position=np.array([-3.0,12]), goal=np.array([0,0]), noise_params=obs_noise_params2))
    obstacles.append(Obstacle(position=np.array([3.0,12]), goal=np.array([0,0]), noise_params=obs_noise_params1))
    obstacles.append(Obstacle(position=np.array([0,22]), goal=np.array([0,0]), noise_params=obs_noise_params2))
    obstacles.append(Obstacle(position=np.array([6.2,20]), goal=np.array([0,0]), noise_params=obs_noise_params1))
    obstacles.append(Obstacle(position=np.array([-6.2,20]), goal=np.array([0,0]), noise_params=obs_noise_params1))
    planner=Planner(param=1.8,samples_param=100,optimizer='MMD D',device='cuda:0',gaussian_approximation=True)
    #planner=Planner(param=1.5,samples_param=25,optimizer='KLD',device='cpu',gaussian_approximation=False)
